
Application.properties is configration file where we store data as key value pairs

DAL Layer(Data Access Layer) Code should be able to communicate with database
JDBC - java database connectivity APIs
mySQLDiver, H2Diver - These Drivers implement JDBC APIs

JDBC Apis -> Rules , JDBC drivers -> actual implementation

Hibernate (Object relation mapping) acts as a layer between Java and DB to facilate communication
App -> ORM --- JDBC Apis -> DB
ORM abstracts JDBC
Problem ye thi ki market me ab sab apna apna version bnane lge ORM ka so then comes JDMC Apis into rescue
JPA -> Java persistent APIs
H2 - lightweight in memory database

 --> @Entity annotation -> tell JPA to create table for this class
 --> @Id -> define primary key
 --> @Table(name = "your name") give table name
   Client providing unique id everytime is troublesome so database tum hi sambhaloo

 --> @GeneratedValue(strategy = GenerationType.AUTO)
   GenerationType ->
                1.identity -> incremental value
                2.sequence
                3.table
                4.auto

 --> @Column(name = "CustomName", length = 500, nullable = false)

 --> SpringData Provides functionality of creating CRUD with DB,
 make a interface and make it extend JPARepositry
